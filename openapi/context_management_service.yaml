openapi: 3.0.0
info:
  title: Context Management Service API
  description: API for managing execution context and knowledge in Oppie.xyz system
  version: 1.0.0
  contact:
    name: Oppie.xyz Team

paths:
  /api/v1/contexts:
    get:
      summary: Get all contexts
      description: Retrieve all contexts in the system
      operationId: getAllContexts
      tags:
        - Contexts
      parameters:
        - name: type
          in: query
          description: Filter contexts by type
          required: false
          schema:
            type: string
            enum: [EXECUTION, KNOWLEDGE, WORKSPACE, SESSION]
        - name: status
          in: query
          description: Filter contexts by status
          required: false
          schema:
            type: string
            enum: [ACTIVE, ARCHIVED, INVALID]
        - name: limit
          in: query
          description: Maximum number of contexts to return
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: List of contexts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Context'
        '500':
          description: Internal server error

    post:
      summary: Create a new context
      description: Create a new context in the system
      operationId: createContext
      tags:
        - Contexts
      requestBody:
        description: Context data to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContextInput'
      responses:
        '201':
          description: Context created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Context'
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /api/v1/contexts/{contextId}:
    get:
      summary: Get context by ID
      description: Retrieve a specific context by its ID
      operationId: getContextById
      tags:
        - Contexts
      parameters:
        - name: contextId
          in: path
          description: ID of the context to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Context found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Context'
        '404':
          description: Context not found
        '500':
          description: Internal server error
          
    post:
      summary: Update context
      description: Update an existing context
      operationId: updateContext
      tags:
        - Contexts
      parameters:
        - name: contextId
          in: path
          description: ID of the context to update
          required: true
          schema:
            type: string
      requestBody:
        description: Context data to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContextUpdate'
      responses:
        '200':
          description: Context updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Context'
        '400':
          description: Invalid input
        '404':
          description: Context not found
        '500':
          description: Internal server error

  /api/v1/vectors:
    get:
      summary: Search vector store
      description: Search for relevant context vectors
      operationId: searchVectors
      tags:
        - Vectors
      parameters:
        - name: query
          in: query
          description: Search query text
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of results to return
          required: false
          schema:
            type: integer
            default: 10
        - name: threshold
          in: query
          description: Similarity threshold (0.0 to 1.0)
          required: false
          schema:
            type: number
            format: float
            minimum: 0.0
            maximum: 1.0
            default: 0.7
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VectorSearchResult'
        '400':
          description: Invalid query
        '500':
          description: Internal server error

    post:
      summary: Index content
      description: Index content into the vector store
      operationId: indexContent
      tags:
        - Vectors
      requestBody:
        description: Content to index
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexRequest'
      responses:
        '201':
          description: Content indexed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexResponse'
        '400':
          description: Invalid input
        '500':
          description: Internal server error

components:
  schemas:
    Context:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the context
        name:
          type: string
          description: Name of the context
        type:
          type: string
          enum: [EXECUTION, KNOWLEDGE, WORKSPACE, SESSION]
          description: Type of the context
        status:
          type: string
          enum: [ACTIVE, ARCHIVED, INVALID]
          description: Status of the context
        data:
          type: object
          description: Context data
          additionalProperties: true
        metadata:
          type: object
          description: Additional metadata for the context
          additionalProperties: true
        parentContextId:
          type: string
          description: ID of the parent context (if any)
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
        expiresAt:
          type: string
          format: date-time
          description: Expiration timestamp (if any)
      required:
        - id
        - name
        - type
        - status
        - data
        - createdAt
        - updatedAt
          
    ContextInput:
      type: object
      properties:
        name:
          type: string
          description: Name of the context
        type:
          type: string
          enum: [EXECUTION, KNOWLEDGE, WORKSPACE, SESSION]
          description: Type of the context
        data:
          type: object
          description: Context data
          additionalProperties: true
        metadata:
          type: object
          description: Additional metadata for the context
          additionalProperties: true
        parentContextId:
          type: string
          description: ID of the parent context (if any)
        expiresAt:
          type: string
          format: date-time
          description: Expiration timestamp (if any)
      required:
        - name
        - type
        - data
        
    ContextUpdate:
      type: object
      properties:
        name:
          type: string
          description: Updated name of the context
        status:
          type: string
          enum: [ACTIVE, ARCHIVED, INVALID]
          description: Updated status of the context
        data:
          type: object
          description: Updated context data
          additionalProperties: true
        metadata:
          type: object
          description: Updated metadata for the context
          additionalProperties: true
        expiresAt:
          type: string
          format: date-time
          description: Updated expiration timestamp
      minProperties: 1
        
    VectorSearchResult:
      type: object
      properties:
        id:
          type: string
          description: ID of the vector
        content:
          type: string
          description: Content associated with the vector
        metadata:
          type: object
          description: Metadata associated with the vector
          additionalProperties: true
        similarity:
          type: number
          format: float
          description: Similarity score (0.0 to 1.0)
        contextId:
          type: string
          description: ID of the associated context
      required:
        - id
        - content
        - similarity
        
    IndexRequest:
      type: object
      properties:
        content:
          type: string
          description: Content to index
        contentType:
          type: string
          enum: [TEXT, CODE, MIXED]
          description: Type of the content
        metadata:
          type: object
          description: Metadata associated with the content
          additionalProperties: true
        contextId:
          type: string
          description: ID of the associated context (if any)
      required:
        - content
        - contentType
        
    IndexResponse:
      type: object
      properties:
        id:
          type: string
          description: ID of the indexed vector
        status:
          type: string
          enum: [SUCCESS, PARTIAL, FAILED]
          description: Status of the indexing operation
        vectorCount:
          type: integer
          description: Number of vectors created
      required:
        - id
        - status
        - vectorCount 