openapi: 3.0.0
info:
  title: Reflexion Service API
  description: API for feedback loop and self-improvement in Oppie.xyz system
  version: 1.0.0
  contact:
    name: Oppie.xyz Team

paths:
  /api/v1/reflexions:
    get:
      summary: Get all reflexions
      description: Retrieve all reflexion records in the system
      operationId: getAllReflexions
      tags:
        - Reflexions
      parameters:
        - name: executionId
          in: query
          description: Filter reflexions by execution ID
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of reflexions to return
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Number of reflexions to skip
          required: false
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: List of reflexion records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reflexion'
        '500':
          description: Internal server error

  /api/v1/reflexions/{reflexionId}:
    get:
      summary: Get reflexion by ID
      description: Retrieve a specific reflexion record by its ID
      operationId: getReflexionById
      tags:
        - Reflexions
      parameters:
        - name: reflexionId
          in: path
          description: ID of the reflexion to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reflexion record found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reflexion'
        '404':
          description: Reflexion not found
        '500':
          description: Internal server error
          
    post:
      summary: Create reflexion
      description: Create a new reflexion record
      operationId: createReflexion
      tags:
        - Reflexions
      parameters:
        - name: reflexionId
          in: path
          description: ID for the new reflexion record
          required: true
          schema:
            type: string
      requestBody:
        description: Reflexion data to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReflexionInput'
      responses:
        '201':
          description: Reflexion created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reflexion'
        '400':
          description: Invalid input
        '500':
          description: Internal server error

components:
  schemas:
    Reflexion:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the reflexion
        executionId:
          type: string
          description: ID of the execution this reflexion belongs to
        planId:
          type: string
          description: ID of the plan that was executed
        summary:
          type: string
          description: Summary of the execution outcome
        insights:
          type: array
          description: List of insights gained from the execution
          items:
            type: string
        blockers:
          type: array
          description: List of blockers encountered during execution
          items:
            $ref: '#/components/schemas/Blocker'
        improvements:
          type: array
          description: List of suggested improvements
          items:
            $ref: '#/components/schemas/Improvement'
        metrics:
          $ref: '#/components/schemas/Metrics'
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
      required:
        - id
        - executionId
        - summary
        - createdAt
          
    ReflexionInput:
      type: object
      properties:
        executionId:
          type: string
          description: ID of the execution this reflexion belongs to
        planId:
          type: string
          description: ID of the plan that was executed
        summary:
          type: string
          description: Summary of the execution outcome
        insights:
          type: array
          description: List of insights gained from the execution
          items:
            type: string
        blockers:
          type: array
          description: List of blockers encountered during execution
          items:
            $ref: '#/components/schemas/Blocker'
        improvements:
          type: array
          description: List of suggested improvements
          items:
            $ref: '#/components/schemas/Improvement'
        metrics:
          $ref: '#/components/schemas/Metrics'
      required:
        - executionId
        - summary
        
    Blocker:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the blocker
        description:
          type: string
          description: Description of the blocker
        type:
          type: string
          enum: [TECHNICAL, BUSINESS_LOGIC, EXTERNAL_DEPENDENCY, RESOURCE_LIMITATION, OTHER]
          description: Type of the blocker
        severity:
          type: string
          enum: [LOW, MEDIUM, HIGH, CRITICAL]
          description: Severity of the blocker
        resolution:
          type: string
          description: Resolution or workaround for the blocker
      required:
        - description
        - type
        - severity
        
    Improvement:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the improvement
        description:
          type: string
          description: Description of the suggested improvement
        category:
          type: string
          enum: [PERFORMANCE, RELIABILITY, ROBUSTNESS, CLARITY, OTHER]
          description: Category of the improvement
        impact:
          type: string
          enum: [LOW, MEDIUM, HIGH]
          description: Expected impact of the improvement
      required:
        - description
        - category
        - impact
        
    Metrics:
      type: object
      properties:
        executionTimeMs:
          type: integer
          description: Execution time in milliseconds
        completionRate:
          type: number
          format: float
          description: Percentage of completed steps
        errorCount:
          type: integer
          description: Number of errors encountered
        toolCallCount:
          type: integer
          description: Number of tool calls made
        checkpointCount:
          type: integer
          description: Number of checkpoints created
      required:
        - executionTimeMs
        - completionRate 