openapi: 3.0.0
info:
  title: External Interface Service API
  description: API for interfacing with external systems in Oppie.xyz
  version: 1.0.0
  contact:
    name: Oppie.xyz Team

paths:
  /api/v1/notifications:
    get:
      summary: Get all notifications
      description: Retrieve all notifications sent or pending
      operationId: getAllNotifications
      tags:
        - Notifications
      parameters:
        - name: status
          in: query
          description: Filter notifications by status
          required: false
          schema:
            type: string
            enum: [PENDING, SENT, FAILED, DELIVERED]
        - name: limit
          in: query
          description: Maximum number of notifications to return
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: List of notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
        '500':
          description: Internal server error

    post:
      summary: Send notification
      description: Send a new notification to an external system
      operationId: sendNotification
      tags:
        - Notifications
      requestBody:
        description: Notification to send
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      responses:
        '202':
          description: Notification accepted for delivery
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /api/v1/reports/morning:
    post:
      summary: Generate morning report
      description: Generate and send a morning status report
      operationId: generateMorningReport
      tags:
        - Reports
      requestBody:
        description: Morning report configuration
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MorningReportRequest'
      responses:
        '202':
          description: Report generation initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /api/v1/webhooks:
    get:
      summary: Get all webhooks
      description: Retrieve all configured webhooks
      operationId: getAllWebhooks
      tags:
        - Webhooks
      responses:
        '200':
          description: List of webhooks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
        '500':
          description: Internal server error

    post:
      summary: Register webhook
      description: Register a new webhook
      operationId: registerWebhook
      tags:
        - Webhooks
      requestBody:
        description: Webhook configuration
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
      responses:
        '201':
          description: Webhook registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /api/v1/webhooks/{webhookId}:
    delete:
      summary: Delete webhook
      description: Delete an existing webhook
      operationId: deleteWebhook
      tags:
        - Webhooks
      parameters:
        - name: webhookId
          in: path
          description: ID of the webhook to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Webhook deleted successfully
        '404':
          description: Webhook not found
        '500':
          description: Internal server error

  /api/v1/openhands:
    get:
      summary: Get OpenHands status
      description: Get the current status of the OpenHands integration
      operationId: getOpenHandsStatus
      tags:
        - OpenHands
      responses:
        '200':
          description: OpenHands status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenHandsStatus'
        '500':
          description: Internal server error

    post:
      summary: Send command to OpenHands
      description: Send a command to the OpenHands system
      operationId: sendOpenHandsCommand
      tags:
        - OpenHands
      requestBody:
        description: Command to send to OpenHands
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenHandsCommand'
      responses:
        '200':
          description: Command executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenHandsResponse'
        '400':
          description: Invalid command
        '500':
          description: Internal server error

components:
  schemas:
    Notification:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the notification
        title:
          type: string
          description: Title of the notification
        message:
          type: string
          description: Message content of the notification
        channel:
          type: string
          enum: [PUSH, EMAIL, SMS, WEBHOOK]
          description: Delivery channel for the notification
        recipient:
          type: string
          description: Recipient of the notification
        status:
          type: string
          enum: [PENDING, SENT, FAILED, DELIVERED]
          description: Status of the notification
        priority:
          type: string
          enum: [LOW, NORMAL, HIGH, URGENT]
          description: Priority of the notification
        sentAt:
          type: string
          format: date-time
          description: When the notification was sent
        deliveredAt:
          type: string
          format: date-time
          description: When the notification was delivered
        metadata:
          type: object
          description: Additional metadata for the notification
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
      required:
        - id
        - title
        - message
        - channel
        - recipient
        - status
        - createdAt
          
    NotificationRequest:
      type: object
      properties:
        title:
          type: string
          description: Title of the notification
        message:
          type: string
          description: Message content of the notification
        channel:
          type: string
          enum: [PUSH, EMAIL, SMS, WEBHOOK]
          description: Delivery channel for the notification
        recipient:
          type: string
          description: Recipient of the notification
        priority:
          type: string
          enum: [LOW, NORMAL, HIGH, URGENT]
          description: Priority of the notification
          default: NORMAL
        attachments:
          type: array
          description: List of attachments
          items:
            $ref: '#/components/schemas/Attachment'
        metadata:
          type: object
          description: Additional metadata for the notification
          additionalProperties: true
      required:
        - title
        - message
        - channel
        - recipient
        
    Attachment:
      type: object
      properties:
        name:
          type: string
          description: Name of the attachment
        type:
          type: string
          enum: [IMAGE, PDF, TEXT, JSON]
          description: Type of the attachment
        content:
          type: string
          description: Base64-encoded content of the attachment
        url:
          type: string
          description: URL to the attachment (alternative to content)
      required:
        - name
        - type
        - content
        
    MorningReportRequest:
      type: object
      properties:
        date:
          type: string
          format: date
          description: Date for the report
        recipients:
          type: array
          description: List of recipients
          items:
            type: string
        includeMetrics:
          type: boolean
          description: Whether to include metrics
          default: true
        includeTaskSummary:
          type: boolean
          description: Whether to include task summary
          default: true
        includePendingApprovals:
          type: boolean
          description: Whether to include pending approvals
          default: true
        customSections:
          type: array
          description: Custom sections to include
          items:
            $ref: '#/components/schemas/ReportSection'
      required:
        - recipients
        
    Report:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the report
        type:
          type: string
          enum: [MORNING, WEEKLY, MONTHLY, CUSTOM]
          description: Type of the report
        status:
          type: string
          enum: [GENERATING, COMPLETED, FAILED]
          description: Status of the report
        recipients:
          type: array
          description: Recipients of the report
          items:
            type: string
        sections:
          type: array
          description: Sections in the report
          items:
            $ref: '#/components/schemas/ReportSection'
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        completedAt:
          type: string
          format: date-time
          description: Completion timestamp
      required:
        - id
        - type
        - status
        - recipients
        - createdAt
        
    ReportSection:
      type: object
      properties:
        title:
          type: string
          description: Title of the section
        content:
          type: string
          description: Content of the section
        type:
          type: string
          enum: [TEXT, TABLE, CHART, METRICS]
          description: Type of the section
        order:
          type: integer
          description: Order of the section in the report
      required:
        - title
        - content
        - type
        
    Webhook:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the webhook
        name:
          type: string
          description: Name of the webhook
        url:
          type: string
          description: URL of the webhook
        events:
          type: array
          description: Events to trigger the webhook
          items:
            type: string
        active:
          type: boolean
          description: Whether the webhook is active
        secret:
          type: string
          description: Secret for webhook signature
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        lastTriggeredAt:
          type: string
          format: date-time
          description: When the webhook was last triggered
      required:
        - id
        - name
        - url
        - events
        - active
        - createdAt
        
    WebhookRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the webhook
        url:
          type: string
          description: URL of the webhook
        events:
          type: array
          description: Events to trigger the webhook
          items:
            type: string
            enum: [TASK_CREATED, TASK_COMPLETED, EXECUTION_STARTED, EXECUTION_COMPLETED, ERROR, CHECKPOINT_CREATED]
        active:
          type: boolean
          description: Whether the webhook is active
          default: true
        secret:
          type: string
          description: Secret for webhook signature
      required:
        - name
        - url
        - events
        
    OpenHandsStatus:
      type: object
      properties:
        connected:
          type: boolean
          description: Whether OpenHands is connected
        mode:
          type: string
          enum: [AGENT_S_ONLY, SHADOW, OPENHANDS_ONLY]
          description: Current operation mode
        availableDevices:
          type: array
          description: Available devices
          items:
            $ref: '#/components/schemas/OpenHandsDevice'
        lastSyncTime:
          type: string
          format: date-time
          description: Last successful sync time
        errors:
          type: array
          description: Recent errors
          items:
            type: string
      required:
        - connected
        - mode
        
    OpenHandsDevice:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the device
        name:
          type: string
          description: Name of the device
        type:
          type: string
          enum: [PHONE, TABLET, LAPTOP, DESKTOP, OTHER]
          description: Type of the device
        status:
          type: string
          enum: [ONLINE, OFFLINE, BUSY]
          description: Status of the device
      required:
        - id
        - name
        - type
        - status
        
    OpenHandsCommand:
      type: object
      properties:
        action:
          type: string
          enum: [CLICK, SWIPE, TYPE, SCREENSHOT, LAUNCH_APP, CLOSE_APP, CUSTOM]
          description: Action to perform
        parameters:
          type: object
          description: Parameters for the action
          additionalProperties: true
        deviceId:
          type: string
          description: ID of the device to target
        timeout:
          type: integer
          description: Timeout in milliseconds
          default: 30000
      required:
        - action
        - deviceId
        
    OpenHandsResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the command was successful
        result:
          type: object
          description: Result of the command
          additionalProperties: true
        error:
          type: string
          description: Error message if the command failed
        executionTime:
          type: integer
          description: Execution time in milliseconds
      required:
        - success
        - executionTime 